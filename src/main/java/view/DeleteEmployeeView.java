/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.EmployeeController;
import model.Employee;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rafael
 */
public class DeleteEmployeeView extends javax.swing.JInternalFrame {

    /**
     * Creates new form DeleteEmployeeView
     */
    public DeleteEmployeeView() {
        initComponents();
        try {
            this.addRowToJTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DeleteEmployeeView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DeleteEmployeeView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void addRowToJTable() throws ClassNotFoundException, SQLException {
        ArrayList<Employee> employeesList = null;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        employeesList = empControl.listAllEmployees();
        Object rowData[] = new Object[7];
        for (int i = 0; i < employeesList.size(); i++) {
            rowData[0] = employeesList.get(i).getEmp_no();
            rowData[1] = employeesList.get(i).getFirst_name();
            rowData[2] = employeesList.get(i).getLast_name();
            rowData[3] = employeesList.get(i).getGender();
            rowData[4] = employeesList.get(i).getHire_date();
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        deleteIDField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("View and Delete Employees");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Gender", "Hire Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Employee ID");

        deleteIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteIDFieldActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user_delete.png"))); // NOI18N
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(deleteIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteIDFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int deleteId = Integer.parseInt(deleteIDField.getText());

        boolean flag = false;
        for (int i = 0; i < model.getRowCount(); i++) {
            if ((model.getValueAt(i, 0)).equals(deleteId)) {
                flag = true;
            }
        }
        if (flag == false) {
            JOptionPane.showMessageDialog(null, "Employee " + deleteId + " does not exist! Type another id...");
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete employee " + deleteId, "Confirm Delete", dialogButton);
            if (dialogResult == 0) {
                try {
                    empControl.deletaEmployee(deleteId);
                } catch (SQLException ex) {
                    Logger.getLogger(DeleteEmployeeView.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(DeleteEmployeeView.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "Employee " + deleteId + " Removed!");
                // remove o registro da tabela na view
                for (int i = 0; i < model.getRowCount(); i++) {
                    if ((model.getValueAt(i, 0)).equals(deleteId)) {
                        model.removeRow(i);
                    }
                }
            } else {
                System.out.println("No Option");
            }
    }//GEN-LAST:event_jButton1ActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deleteIDField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    EmployeeController empControl = new EmployeeController();
}
